services:
  explorerdb.mynetwork.com:
    image: postgres:13
    container_name: explorerdb.mynetwork.com
    hostname: explorerdb.mynetwork.com
    environment:
      - POSTGRES_DB=fabricexplorer
      - POSTGRES_USER=hppoc
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./app/persistence/fabric/postgreSQL/db/explorerpg.sql:/docker-entrypoint-initdb.d/explorerpg.sql
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork.com
    ports:
      - 5432:5432

  explorer.mynetwork.com:
    build:
      context: .
      dockerfile: Dockerfile
    image: kmasc/hyperledger-explorer:fabric
    container_name: explorer.mynetwork.com
    hostname: explorer.mynetwork.com
    environment:
      - DATABASE_HOST=explorerdb.mynetwork.com
      - DATABASE_DATABASE=fabricexplorer
      - DATABASE_USERNAME=hppoc
      - DATABASE_PASSWD=password
      - LOG_LEVEL_APP=debug
      - LOG_LEVEL_DB=debug
      - LOG_LEVEL_CONSOLE=info
      - LOG_CONSOLE_STDOUT=true
      - DISCOVERY_AS_LOCALHOST=false
      - PORT=9090
    volumes:
      - ./config.json:/opt/explorer/app/platform/fabric/config.json
      - ./connection-profile:/opt/explorer/app/platform/fabric/connection-profile
      - /root/Kmasc/fabric-3.1.1/fabric-samples/test-network/organizations:/opt/explorer/crypto
    ports:
      - 9090:9090
    depends_on:
      explorerdb.mynetwork.com:
        condition: service_healthy
    networks:
      - mynetwork.com
    external_links:
      - peer0.org1.example.com:peer0.org1.example.com
      - peer0.org2.example.com:peer0.org2.example.com
      - orderer.example.com:orderer.example.com

volumes:
  pgdata:

networks:
  mynetwork.com:
    external: true
    name: fabric_test
